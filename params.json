{
  "name": "Drip-numerical-optimizer",
  "tagline": "DRIP Numerical Optimizer",
  "body": "\r\n<p align=\"center\"><img src=\"https://github.com/lakshmiDRIP/DRIP/blob/master/DRIP_Logo.gif?raw=true\" width=\"100\"></p>\r\n\r\n**v2.53**  *12 November 2016*\r\n\r\nDRIP Numerical Optimizer is a collection of Java libraries for Numerical Optimization and Spline Functionality.\r\n\r\nDRIP Numerical Optimizer is composed of the following main libraries:\r\n * Numerical Optimization Library\r\n * Spline Model Library\r\n\r\nFor Installation, Documentation and Samples, and the associated supporting Numerical Libraries please check out [DRIP] (https://github.com/lakshmiDRIP/DRIP).\r\n\r\n\r\n##DRIP Core Technical Specifications\r\n * [Asset Allocation Library](https://github.com/lakshmiDRIP/DRIP/tree/master/Docs/DRIPSpecification/AssetAllocation/AssetAllocation_v2.13.pdf)\r\n * [Fixed Income Analytics](https://github.com/lakshmiDRIP/DRIP/tree/master/Docs/DRIPSpecification/FixedIncome/FixedIncomeAnalytics_v2.47.pdf)\r\n * [Transaction Cost Analytics](https://github.com/lakshmiDRIP/DRIP/tree/master/Docs/DRIPSpecification/TransactionCost/TransactionCostAnalytics_v2.53.pdf)\r\n\r\n\r\n##DRIP Supporting Technical Specifications\r\n * [Spline Builder Library](https://github.com/lakshmiDRIP/DRIP/tree/master/Docs/DRIPSpecification/SplineBuilder/SplineBuilder_v0.82.pdf)\r\n * [Numerical Optimization Library](https://github.com/lakshmiDRIP/DRIP/tree/master/Docs/DRIPSpecification/NumericalOptimizer/NumericalOptimization_v2.05.pdf)\r\n * [Statistical Learning Library](https://github.com/lakshmiDRIP/DRIP/tree/master/Docs/DRIPSpecification/StatisticalLearning/StatisticalLearningLibrary_v0.80.pdf)\r\n * [Machine Learning Library](https://github.com/lakshmiDRIP/DRIP/tree/master/Docs/DRIPSpecification/MachineLearning/MachineLearningLibrary_v0.92.pdf)\r\n\r\n\r\n##Additional Documentation\r\n * [DRIP GitHub Source](https://github.com/lakshmiDRIP/DRIP)\r\n * [DRIP API Javadoc](https://lakshmidrip.github.io/DRIP/Javadoc/index.html)\r\n * [DRIP Release Notes](https://github.com/lakshmiDRIP/DRIP/tree/master/ReleaseNotes)\r\n * [DRIP Technical Specifications](https://github.com/lakshmiDRIP/DRIP/tree/master/Docs/DRIPSpecification)\r\n * [DRIP External Specifications](https://github.com/lakshmiDRIP/DRIP/tree/master/Docs/External)\r\n * User guide is a work in progress!\r\n\r\n\r\n##Samples (Core Optimizer - Need much more!)\r\n * [R<sup>d</sup>->R<sup>1</sup> Co-variance Ellipsoid](https://github.com/lakshmiDRIP/DRIP/tree/master/org/drip/sample/rdtor1)\r\n * [Descent Convergence Verifier](https://github.com/lakshmiDRIP/DRIP/tree/master/org/drip/sample/descentverifier)\r\n * [Constrained Optimization Variants](https://github.com/lakshmiDRIP/DRIP/tree/master/org/drip/sample/lagrangian)\r\n * [Semi-definite Programming](https://github.com/lakshmiDRIP/DRIP/tree/master/org/drip/sample/semidefinite)\r\n\r\n\r\n##Samples (Numerical Support - Need much more!)\r\n * [Linear Algebra/Components](https://github.com/lakshmiDRIP/DRIP/tree/master/org/drip/sample/matrix)\r\n * [Closed Distribution Measure](https://github.com/lakshmiDRIP/DRIP/tree/master/org/drip/sample/measure)\r\n * [Empirical Distribution Measure](https://github.com/lakshmiDRIP/DRIP/tree/master/org/drip/sample/statistics)\r\n * [Search/Quadrature/Fourier](https://github.com/lakshmiDRIP/DRIP/tree/master/org/drip/sample/numerical)\r\n\r\n\r\n##Samples (Spline Library - Need much more!)\r\n * [Segments and Splines](https://github.com/lakshmiDRIP/DRIP/tree/master/org/drip/sample/spline)\r\n * [Stretches and Grids](https://github.com/lakshmiDRIP/DRIP/tree/master/org/drip/sample/stretch)\r\n\r\n\r\n##Features\r\n\r\n###Numerical Optimization\r\n####Fixed Point Finder\r\n * Framework\r\n * Search Initialization\r\n * Bracketing\r\n * Objective Function Failure\r\n * Bracketing Start Initialization\r\n * Open Search Initialization\r\n * Search/Bracketing Initializer Heuristic Customization\r\n * Numerical Challenges in Search\r\n * Variate Iteration\r\n * Open Search Method - Newton's Method\r\n * Closed Search Methods - Secant\r\n * Closed Search Methods - Bracketing Iterative Search\r\n * Closed Search Methods - Univariate Iterator Primitive: Bisection\r\n * Closed Search Methods - Univariate Iterator Primitive: False Position\r\n * Closed Search Methods - Univariate Iterator Primitive: Inverse Quadratic\r\n * Closed Search Methods - Univariate Iterator Primitive: Ridder's\r\n * Closed Search Methods - Univariate Iterator Primitive: Brent and Zheng\r\n * Polynomial Root Search\r\n\r\n####Meta-heuristics\r\n * Properties and Classification\r\n * Techniques\r\n * Meta-heuristic Techniques in Combinatorial Problems\r\n\r\n####Convex Optimization - Problem Space Specification\r\n * Convex Sets and Convex Hull\r\n * Properties of Convex Sets/Functions\r\n * Convex Optimzation Problems\r\n\r\n####Numerical Optimization - Approaches and Solutions\r\n * Newton's Method in Optimization\r\n * Higher Dimensions\r\n * Wolf Conditions\r\n * Armijo Rule and Curvature Condition\r\n * Rationale for the Wolfe Conditions\r\n\r\n####Constrained Optimization\r\n * Definition and Description\r\n * General Form\r\n * Solution Methods\r\n * Constraint Optimization: Branch and Bound\r\n * Branch-and-Bound: First Choice Bounding Conditions\r\n * Branch and Bound: Russian Doll Search\r\n * Branch and Bound: Bucket Elimination\r\n\r\n####Lagrange Multipliers\r\n * Problem Formulation\r\n * Handling Multiple Constraints\r\n * Formulation via Differentiable Manifolds\r\n * Interpretation of the Lagrange Multipliers\r\n * Sample: Maximal Information Entropy\r\n * Sample: Numerical Optimization Techniques\r\n\r\n####Karush-Kuhn-Tucker Conditions\r\n * Necessary Conditions for Optimization Problems\r\n * Regularity Conditions or Constraint Qualifications\r\n * Sufficient Conditions\r\n * KKT Conditions Example - Economics\r\n * KKT Conditions Example - Value Function\r\n * KKT Generalizations\r\n\r\n####Interior Point Method\r\n * Interior Point Methodology and Algorithm\r\n\r\n\r\n###Spline Builder\r\n####Calibration Framework\r\n\r\n####Spline Builder Setup\r\n * Design Objective Behind Interpolating Splines\r\n * Base Formulation\r\n\r\n####B-Splines\r\n * B-Spline Derivatives\r\n\r\n####Polynomial Spline Basis Function\r\n * Polynomial SPline Basis Functions\r\n * Bernstein Polynomial Basis Functions\r\n\r\n####Local Spline Stretches\r\n * Local Interpolating/Smoothing Spline Stretches\r\n * Space Curves and Loops\r\n\r\n####Spline Segment Calibration\r\n * Smoothing Best Fit Splines\r\n * Segment Best Fit Response with Constraint Matching\r\n\r\n####Spline Jacobian\r\n * Optimizing Spline Basis Function Jacobian\r\n * Spline Input Quote Sensitivity Jacobian\r\n\r\n####Shape Preserving Spline\r\n * Shape Preserving Tension Spline\r\n * Shape Preserving Nu Splines\r\n * Alternate Tension Spline Formulations\r\n\r\n####Koch-Lyche-Kvasov Tension Splines\r\n\r\n####Smoothing Splines\r\n * Penalty Minimization Risk Function\r\n * Smoothing Spline Setup\r\n * Ensemble Averaging vs. Basis Spline Representation\r\n * Least Squares Exact Fit + Curvature + Segment Length Penalty Formulation\r\n * Alternate Smootheners\r\n\r\n####Multi-dimensional Splines\r\n\r\n\r\n##Licence\r\n\r\nApache 2.0\r\n\r\n\r\n##Contact\r\n\r\nlakshmi@synergicdesign.com\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}